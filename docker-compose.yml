version: '3.5'

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "10001:9001"
      - "10000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.12
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  attu:
    container_name: attu
    image: zilliz/attu:v2.3.9
    security_opt:
    - seccomp:unconfined
    environment:
      MILVUS_URL: "standalone:19530"
    ports:
      - "3000:3000"
    depends_on:
      - "etcd"
      - "minio"
      - "standalone"

  whisper-inference:
    container_name: whisper-inference
    build:
      context: whisper-inference
      dockerfile: Dockerfile
    shm_size: 2gb
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # milvus-backup:
  #   container_name: milvus-backup
  #   build:
  #     context: milvus-backup
  #     dockerfile: Dockerfile
  #   ports:
  #     - "10101:8080"
  #   depends_on:
  #     - "etcd"
  #     - "minio"
  #     - "standalone"

  core-backend:
    container_name: core-backend
    build:
      context: core-backend
      dockerfile: Dockerfile
    environment:
      N_WORKERS: 3
      MODEL_SR: 16000
      MILVUS_ENDPOINT: "http://standalone:19530"
      MILVUS_DB_NAME: "deafult"
      MILVUS_COLLECTION_NAME: "whisper_segments"
      MILVUS_SIM_METRIC: "L2"
      MILVUS_INDEX_TYPE: "IVF_FLAT"
      EMBEDDING_DIM: 1280
    ports:
      - "8080:8080"
    volumes:
      - /home/konstantin/Desktop/Hackathon/files:/files
    depends_on:
      - "etcd"
      - "minio"
      - "standalone"
      - "whisper-inference"
      # - "milvus-init"

  milvus-init:
    container_name: milvus-init
    build:
      context: milvus-init
      dockerfile: Dockerfile
    volumes:
      - ./jsons:/app/backup-data
    depends_on:
      - "etcd"
      - "minio"
      - "standalone"
      - "whisper-inference"
      - "core-backend"
      # - "milvus-backup"

  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "2001:2001"
    depends_on:
      - "etcd"
      - "minio"
      - "standalone"
      - "milvus-backup"
      - "core-backend"
    
networks:
  default:
    name: milvus